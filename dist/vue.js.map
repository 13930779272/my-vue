{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parser.js","../src/compiler/index.js","../src/vnode/patch.js","../src/lifecycle.js","../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/vnode/index.js","../src/render.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g  // 匹配{{ xxx }}\r\n// \r\nexport default function generate(ast) {\r\n  // console.log(ast)\r\n  let children = genChildren(ast);\r\n  let code = `_c('${ast.tag}', ${\r\n    ast.attrs.length ? genProps(ast.attrs) : 'undefined'\r\n  }, ${children ? `${children}` : ''})`;\r\n  return code;\r\n}\r\n// 生成属性\r\nfunction genProps(attrs) {\r\n  // console.log();\r\n  let str = [];\r\n  for(let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    // 样式单独处理成一个对象\r\n    if(attr.name === 'style') {\r\n      let styles = {}\r\n      attr.value.replace(/([^:;]+):([^;:]+)/g, function() {\r\n        styles[arguments[1]] = arguments[2]\r\n      });\r\n      attr.value = styles;\r\n    }\r\n    str.push(`${attr.name}:${JSON.stringify(attr.value)}`);\r\n  }\r\n  return `{${str.join()}}`\r\n  // console.log()\r\n}\r\nfunction genChildren(ast) {\r\n  let children = ast.children;\r\n  if(children) {\r\n    return children.map(item => gen(item)).join(',')\r\n  }\r\n  // console.log(ast);\r\n  return false\r\n};\r\nfunction gen(el) {\r\n  if(el.type === 1) {\r\n    return generate(el)\r\n  } else {\r\n    let text = el.text;\r\n    // 匹配{{}} 的如果匹配到了说明有表达式的情况，如果没有匹配到，说明是纯文本\r\n    if(!defaultTagRE.test(text)) return `_v('${text}')`;\r\n    // 有 <div>qqqq {{name}} 3333 {{age}}</div> 这种情况 要做一个普通值和表达式的拼接 要做成_v('qqqq' + _s(name) + '3333')\r\n    // 此处注意正则加 g 之一lastIndex的问题\r\n    let lastIndex = defaultTagRE.lastIndex = 0;\r\n    let tokens = [];\r\n    let match;\r\n    // 此处不能乱打印会影响 正则的lastIndex\r\n    // console.log(defaultTagRE.exec(text));\r\n    // console.log(defaultTagRE.exec(text));\r\n    while(match = defaultTagRE.exec(text)) {\r\n      // 匹配到表达式的索引\r\n      let index = match.index\r\n      // 如果索引比初始索引要大证明表达式前面还有普通文本\r\n      if (lastIndex < index) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n      }\r\n      // 把匹配到的内容用 _s() 包裹去掉前后空格\r\n      tokens.push(`_s(${match[1].trim()})`);\r\n      // console.log(tokens);\r\n      // 修改指针放到表达式后边，开始的索引 index加上匹配到的字符串的长度正好是表达式结束的索引位置\r\n      lastIndex = index + match[0].length\r\n      // 如果此时的索引还是没有到达字符串的长度的话证明还有普通文本也得放到tokens数组里面\r\n    }\r\n    if (lastIndex < text.length) {\r\n      // 一直到text最后\r\n      tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n    }\r\n    // console.log(tokens);\r\n    return `_v(${tokens.join('+')})`\r\n  }\r\n};","\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 匹配标签名的 aa-xxx\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // 命名空间标签 aa:aa-xxx\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名 索引第一个 [1]\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div> 索引第一个 [1]\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的 a=xxx a=\"xxx\" a='xxx'\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的  > />\r\n\r\n\r\n// 解析html,会编译成一个对象非常像虚拟DOM但是不是虚拟DOM\r\nfunction parserHTML(html) {\r\n  // 构建一个栈，当解析到一个标签的时候就放进去一个，再有下一个标签就是栈里边最后一个的儿子，当解析到结束标签的时候就从栈里边删掉，自闭合标签同理\r\n  let stack = [];\r\n  // 树根\r\n  let root = null;\r\n\r\n  function createAstElement(tag, attrs, parent = null) {\r\n    return {\r\n      tag,\r\n      type: 1,\r\n      children: [],\r\n      parent,\r\n      attrs\r\n    }\r\n  }\r\n  // 如何构建一棵树，构建父子关系\r\n  function start(tag, attrs) {\r\n    console.log(tag, attrs);\r\n    // 遇到开始标签 就取栈中最后一个作为父节点\r\n    let parent = stack[stack.length - 1];\r\n    let element = createAstElement(tag, attrs, parent);\r\n    // root等于null证明 当前解析的就是根节点\r\n    if(root === null) {\r\n      root = element\r\n    };\r\n    if(parent) {\r\n      // 如果有父级就更新当前的标签的parent 指向 parent\r\n      element.parent = parent;\r\n      // parent 的children 里放上 element\r\n      parent.children.push(element)\r\n    }\r\n    stack.push(element);\r\n\r\n  }\r\n  function end(tagName) {\r\n    console.log(tagName);\r\n    let endTag = stack.pop();\r\n    if(endTag.tag != tagName) {\r\n      console.log('标签出错')\r\n    }\r\n  }\r\n  function text(chars) {\r\n    let parent = stack[stack.length - 1];\r\n    // 替换空格\r\n    chars = chars.replace(/\\s/g, \"\");\r\n    console.log(chars);\r\n    if (chars) {\r\n      parent.children.push({\r\n        type: 2,\r\n        text: chars\r\n      })\r\n    }\r\n  }\r\n  // 删除匹配到（已经解析完成的）的字符\r\n  function advance(len) {\r\n    html = html.substring(len)\r\n  };\r\n  // 处理开始标签\r\n  function parseStartTag() {\r\n    // 匹配开始标签，我们要的是开始标签的名字\r\n    const start = html.match(startTagOpen);\r\n    if(start) {\r\n      const match = {\r\n        // 标签的名字是[1]\r\n        tagName: start[1],\r\n        attrs: [] // 标签的属性\r\n      }\r\n      // debugger;\r\n      // 标签一旦解析完成就得删掉\r\n      advance(start[0].length);\r\n      let end;\r\n      let arr;\r\n      // debugger\r\n      // 有属性并且没有匹配到开始标签的结束（> />）就继续循环直到匹配到开始标签的结束（> />）为止\r\n      while(!(end = html.match(startTagClose)) && (arr = html.match(attribute))) {\r\n        // 在match里面添加属性\r\n        match.attrs.push({\r\n          name: arr[1],\r\n          value: arr[3] || arr[4] || arr[5]\r\n        });\r\n        advance(arr[0].length)\r\n      }\r\n      // 最终会匹配到开始标签的关闭，也需要截取掉\r\n      if(end) {\r\n        advance(end[0].length)\r\n      }\r\n      return match;\r\n      // console.log(match, html)\r\n    } else {\r\n      return false\r\n    }\r\n    \r\n  };\r\n  // 处理模板，不停的截取模板，直到模板全部解析完毕\r\n  while(html) {\r\n    // 解析开始标签<, 当 < 在字符串中的索引为零时证明是开始标签的 < \r\n    let index = html.indexOf('<');\r\n    // debugger\r\n    if(index === 0) {\r\n      // 解析开始标签并且把属性也解析出来\r\n      const startTagMatch = parseStartTag();\r\n      console.log(startTagMatch);\r\n      // 开始标签\r\n      if(startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue;\r\n      }\r\n      let endTagMatch;\r\n      // < 也有可能是结束标签\r\n      if(endTagMatch = html.match(endTag)) {\r\n        end(endTagMatch[1]);\r\n        advance(endTagMatch[0].length)\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    // 处理文本 当index大于零的时候证明 是文本了\r\n    if(index > 0) {\r\n      // 直接拿到文本\r\n      let chars = html.substring(0, index);\r\n      text(chars);\r\n      advance(chars.length)\r\n    }\r\n\r\n  }\r\n  return root;\r\n};\r\n\r\n\r\nexport default parserHTML\r\n","import generate from \"./generate\";\r\nimport parserHTML from \"./parser\";\r\n\r\nexport function compilerToFunction(template) {\r\n  // 第一步将模板变成ast语法树\r\n  let ast = parserHTML(template);\r\n  // 第二步代码优化 标记静态节点 不是核心暂时略过，直接下一步\r\n\r\n  // 第三步代码生成，生成render函数\r\n  // _c => createElement\r\n  // _v => vnode\r\n  // _s => stringify\r\n  let code = generate(ast);\r\n  // 包装成render函数\r\n  let render = new Function(`with(this){ return ${code}}`)\r\n  return render;\r\n}\r\n","export function patch(el, vnode) {\r\n  // 在这根据虚拟dom生成一个新的el替换掉原来的el(可以去看官网的生命周期图示)\r\n  console.log(el, vnode);\r\n  const elm = createElm(vnode);\r\n  let parent = el.parentNode;\r\n  // 把新的节点插入到老节点的下一个兄弟元素的前面，如果没有下一个兄弟元素就是null ，就是appendChild\r\n  parent.insertBefore(elm, el.nextSibling);\r\n  // 删除老的el,更新页面\r\n  parent.removeChild(el)\r\n  console.log(elm);\r\n  return elm\r\n}\r\n\r\nfunction createElm(vnode) {\r\n  const { tag, data, children, key, text, vm} = vnode\r\n  // 在这我们是通过有没有tag来判定是元素还是文本的\r\n  // 我们让虚拟节点和真实节点做一个映射关系, 后续某个虚拟节点更新了 我可以跟踪到真实节点，并且更新真实节点\r\n  if (typeof tag === 'string') {\r\n    vnode.el = document.createElement(tag);\r\n    // 把属性插入到dom上\r\n    updateProperties(vnode.el, data)\r\n    children.forEach((child) => {\r\n      vnode.el.appendChild(createElm(child))\r\n    })\r\n  } else {\r\n    vnode.el = document.createTextNode(text);\r\n  }\r\n  return vnode.el\r\n}\r\n\r\nfunction updateProperties(el, props = {}) {\r\n  for(let key in props) {\r\n    el.setAttribute(key, props[key])\r\n  }\r\n}","import { patch } from \"./vnode/patch\";\r\n\r\nexport function mountComponent(vm) {\r\n  vm._update(vm._render())\r\n}\r\n\r\nexport function lifeCycleMixin(Vue) {\r\n  // vue的渲染流程都是通过_update完成的\r\n  Vue.prototype._update = function(vnode) {\r\n    console.log(vnode);\r\n    const vm =  this;\r\n    vm.el = patch(vm.$el, vnode)\r\n  }\r\n}","export function isFunction (data) {\r\n  return typeof data == 'function'\r\n}\r\nexport function isObject(data) {\r\n  return typeof data == 'object' && data !== null;\r\n}\r\nexport let isArray = Array.isArray","\r\nlet oldArrayProperty = Array.prototype // 获取数组的老的方法\r\nexport let arrayMethods = Object.create(oldArrayProperty); // 让arrayMethods可以通过__proto__ 找到Array的prototype\r\n// create(property) {\r\n//   let fn = function() {}\r\n//   fn.property = property;\r\n//   return new fn\r\n// }\r\nlet methods = [\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'splice',\r\n  'sort',\r\n  'reverse'\r\n];\r\n\r\nmethods.forEach(method => {\r\n  // 这个操作会把需要重写的方法重写，并且能找到数组上没有重写的方法，原来的方法有，又把特殊的给重写了\r\n  arrayMethods[method] = function (...args) {\r\n    console.log('数组');\r\n    // 数组新增的属性要看一下是不是对象，如果是对象继续进行劫持,可以新增数组属性的方法有splice push unshift\r\n    // 需要调用数组的原生的逻辑,arr.push\r\n    oldArrayProperty[method].call(this, ...args);\r\n    // 调用的原有的方法，还可以添加自己的逻辑，（函数劫持、切片编程）\r\n    // splice 从第三个参数起就是新增的属性，unshift push 所有的参数都是新增的属性\r\n    // inserted是新增属性的数组，遍历数组看一下是否需要二次观测\r\n    let inserted = [];\r\n    let ob = this.__ob__\r\n    switch(method) {\r\n      case 'splice':\r\n        inserted = args.slice(2);\r\n        break\r\n      case 'push':\r\n        inserted = args;\r\n        break\r\n      case 'unshift':\r\n        inserted = args;\r\n        break\r\n    };\r\n    // inserted[] 遍历数组 看一下它是否需要进行劫持\r\n    if(inserted.length) ob.observeArray(inserted);\r\n  }\r\n})","import { isArray, isObject } from \"../utils\"\r\nimport { arrayMethods } from \"./array\";\r\nclass Observer {\r\n  // 对象可以递归，数组里面的数组也得递归\r\n  constructor(data) {\r\n    // 我给对象和数组添加一个自定义属性，这种情况会有死循环了，对象会一直遍历自己身上的属性，__ob__有__ob__,死循环\r\n    // data.__ob__ = this;\r\n    // 不让__ob__ 被遍历到\r\n    // 这样就不会有死循环了，我们打印vue的数据都会看到__ob__这样一个属性就是这加的\r\n    Object.defineProperty(data, '__ob__', {\r\n      value:this,\r\n      enumerable:false // 标识这个属性不能被列举出来，不能被循环到\r\n    })\r\n    // 判断,根数据必须是一个对象所以第一次一定会走到walk里去\r\n    if(isArray(data)) { // 如果是数组就进去\r\n      // 更改数组的原型方法,\r\n      data.__proto__ = arrayMethods;\r\n      // 假如数组里面有对象或者数组的话，就需要再把数组的每一项递归一遍\r\n      this.observeArray(data)\r\n    } else {\r\n      this.walk(data); // 核心就是循环对象\r\n    }\r\n    \r\n  }\r\n  observeArray (data) { // 递归遍历数组，把数组里面的[{}] [[]] 再次重写\r\n    data.forEach(item => observe(item))\r\n  }\r\n  walk(data) {\r\n    Object.keys(data).forEach(key => { // 使用Object.defineProperty重写数据\r\n      defineReactive(data, key, data[key]);\r\n    })\r\n  }\r\n}\r\n// vue2应用了defineProperty需要一加载时就进行递归操作，所以耗费性能，层次过深更严重\r\n// 1.性能优化的原则\r\n// 1) 不要把所有的数据都放到data中，因为所有的数据都会增加get和set\r\n// 2) 数据不要层次过深，尽量扁平化使用\r\n// 3) 不要频繁的获取数据\r\n// 4) 如果数据不需要响应式，可以使用Object.freeze冻结属性\r\nfunction defineReactive(obj, key, value) { // 此处会产生闭包（闭包不会太耗费性能，也不会泄露），value会向上层的value查找\r\n  // 递归观测数据，不管有多少层我都要观测\r\n  // 如果数据是一个数组那么数组的每一项也会增加get和set，假如说数组的数据多会很耗费性能，所以说数组就不要进行 defineProperty(数组也支持defineProperty)\r\n  // vue3中为了兼容proxy内部对数组用的就是defineProperty\r\n  // 按照常理来说用户修改数组无非采用数组的方法，只要把能改变数组的数组的方法重写就可以了（push pop shift unshift reverse sort splice）\r\n  observe(value);\r\n  Object.defineProperty(obj, key, {\r\n    get() {\r\n      return value; // 此处不能用obj[key]去取值，\r\n    },\r\n    set(newValue) {\r\n      console.log('设置新值')\r\n      if(newValue === value) return;\r\n      // 继续观测新值，否则如果新值是对象或者数组的话就不是响应式的了\r\n      observe(newValue)\r\n      value = newValue\r\n    }\r\n  })\r\n}\r\nexport function observe(data) {\r\n  // console.log(data)\r\n  // 如果data不是对象，就不用观测了\r\n  // 此处如果是数组也会走到Observer,里面会判断是否是数组\r\n  if(!isObject(data)) {\r\n    return ;\r\n  };\r\n  // 如果一个对象被观测过了就会有这个__ob__,那么就不用再观测了\r\n  if(data.__ob__) {\r\n    return;\r\n  }\r\n  // 需要观测data,最外层必须是一个{}，不能是数组，\r\n  // 如果一个数据已经被观测过了，就不要再观测了，用类来实现，观测之后就增加一个标识，再观测是去检测，做出判断\r\n  return new Observer(data);\r\n}","import { observe } from \"./observe\";\r\nimport { isFunction } from \"./utils\";\r\n\r\nexport function initState(vm) {\r\n  const options = vm.$options;\r\n  if(options.data) { // 如果有data属性\r\n    initData(vm)\r\n  }\r\n};\r\n\r\nfunction proxy(vm, key, source) { // 此处也会有闭包\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key];\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue;\r\n    }\r\n  })\r\n};\r\n\r\nfunction initData(vm) {\r\n  console.log(vm);\r\n  // data是函数或者对象\r\n  let data = vm.$options.data;\r\n  // 只有根实例可以传一个对象，组件必须传函数  data和vm_data引用的是同一个空间，data被劫持了，vm._data也被劫持了\r\n  data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n  /**\r\n   * 我们把数据挂载到vm上因为我们需要让用户通过vm.xxx 的方式拿到xxx数据，\r\n   * 此时我们思考通过vm.$options.data() 是否可以呢，当然不可以因为我们在执行一次拿到的数并不是响应式的数据\r\n   * 我们把_data放到vm上看起来不是用户写的\r\n   * 此时vm._data.xxx也不是我们想要的结果\r\n   * 想要达到我们想要的结果我们就接着用 Object.defineProperty + for in 的方式把data代理就可以了\r\n   */\r\n  // 需要将data变成响应式的，重写data中的所有属性\r\n  // console.log(data);\r\n  // console.log(observe)\r\n  observe(data);\r\n  // 把data代理到vue实例上，取值的时候再去做代理(懒代理，只有取值的时候才代理)，不是暴力的去赋值，（暴力的去赋值会有命名冲突问题）\r\n  for(let key in data) { //vm.xxx => vm._data.xxx\r\n    proxy(vm, key, '_data')\r\n  }\r\n  // console.log(data);\r\n  // data.list.push('23123');\r\n  // data.list.pop(1)\r\n}","import { compilerToFunction } from \"./compiler\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    // console.log(options)\r\n    // 初始化的流程\r\n    const vm = this;\r\n    // 把用户选项放到vm上,后续有其他的扩展的方法想要拿到用户选项就可以通过vm去拿，$：VUE内部的\r\n    vm.$options = options;\r\n    // 初始化状态\r\n    initState(vm);\r\n    // options中有el、data\r\n    if(vm.$options.el) {\r\n      // 走到这的时候，数据已经被劫持了,数据的变化需要更新视图， diff算法更新需要更新的部分\r\n      // 如果有el要将数据挂载到页面上\r\n      console.log('页面要挂载');\r\n      // ast语法树 将template编译成一个树结构 描述为一个树结构 将代码重组成js语法\r\n      // 模板编译原理 把template模板编译成render函数 render函数返回虚拟dom 然后生成真实dom 如果数据更新了再执行render 通过diff算法比对\r\n      // 挂载dom的地方有 el、$mount方法， 模板的方式直接写 render template 无论用哪种方式最终都是调用的一个方法: $mount\r\n      vm.$mount(vm.$options.el)\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function(el) {\r\n    const vm = this;\r\n    // 获取真实的DOM\r\n    el = document.querySelector(el);\r\n    vm.$el = el\r\n    // 看看配置项里面有没有render函数，因为render函数的优先级最高，如果没有看看有没有template模板，如果template模板也没有就用el里面的内容\r\n    if(!vm.$options.render) {\r\n      let template = vm.$options.template;\r\n      if(!template) {\r\n        // outerHTML指的是当前元素的整个内容（包含这个元素），innerHTML指的是元素里面的东西（不包含当前元素）\r\n        template = el.outerHTML\r\n      };\r\n      let render = compilerToFunction(template);\r\n      vm.$options.render = render;\r\n    }\r\n    // debugger\r\n    mountComponent(vm)\r\n    // console.log(vm.$options.render)\r\n  }\r\n};\r\n   \r\n// 1.new Vue 会调用_init方法进行初始化操作\r\n// 2.会将用户的选项放到 vm.$options上\r\n// 3.会对当前属性上搜素有没有data 数据   initState\r\n// 4.有data 判断data是不是一个函数 ，如果是函数取返回值 initData\r\n// 5.observe 去观测data中的数据 和 vm没关系，说明data已经变成了响应式\r\n// 6.vm上像取值也能取到data中的数据 vm._data = data 这样用户能取到data了  vm._data\r\n// 7.用户觉得有点麻烦 vm.xxx => vm._data\r\n// 8.如果更新对象不存在的属性，会导致视图不更新， 如果是数组更新索引和长度不会触发更新\r\n// 9.如果是替换成一个新对象，新对象会被进行劫持，如果是数组存放新内容 push unshift() 新增的内容也会被劫持\r\n// 通过__ob__ 进行标识这个对象被监控过  （在vue中被监控的对象身上都有一个__ob__ 这个属性）\r\n// 10如果你就想改索引 可以使用$set方法 内部就是splice()\r\n\r\n\r\n\r\n// vue技术点\r\n// 1.编译原理\r\n// 2.响应式原理 依赖收集\r\n// 3.组件化开发 （贯穿了vue的流程）\r\n// 4.diff算法\r\n\r\n\r\n// 如果有el 需要挂载到页面上\r\n","export function createElement(vm, tag, data = {}, ...children) { // 创建虚拟元素节点\r\n  // key 是循环的key标识就在属性里, tag: 标签名 data: 属性 children: 子节点， _c的参数\r\n  return vnode(vm, tag, data, children, data.key, undefined)\r\n}\r\n\r\nexport function createText(vm, text) { // 创建虚拟文本节点\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n// 因为节点元素跟文本元素返回的东西是不一样的，\r\n// 写起来麻烦所以就抽成vnode函数统一返回，不管是元素或者节点控制传参就可以了\r\nfunction vnode(vm, tag, data, children, key, text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    data,\r\n    children,\r\n    key,\r\n    text\r\n  }\r\n}\r\n\r\n/**\r\n * 返回的vnode跟ast很想像\r\n * ast：只是描述语法的根据语法解析出来的,没有用户自己的逻辑\r\n * vnode：描述dom结构的，可以自己去扩展属性\r\n */","import { isObject } from \"./utils\";\r\nimport { createElement, createText } from \"./vnode\";\r\n\r\nexport function renderMixin(Vue) {\r\n  Vue.prototype._c = function() { // 创建元素节点\r\n    console.log(arguments);\r\n    const vm = this;\r\n    return createElement(vm, ...arguments)\r\n  }\r\n  Vue.prototype._v = function(text) { // 创建文本节点\r\n    console.log(arguments);\r\n    const vm = this;\r\n    return createText(vm, text)\r\n  }\r\n  Vue.prototype._s = function(val) { // JSON.stringify\r\n    // 不论是普通类型还是对象一律都给转成字符串\r\n    if (isObject(val)) return JSON.stringify(val);\r\n    return val;\r\n  }\r\n  Vue.prototype._render = function() {\r\n    const vm = this;\r\n    const { render } = vm.$options;\r\n    console.log(render.toString());\r\n    const vnode = render.call(vm);\r\n    console.log(vnode);\r\n    return vnode;\r\n  }\r\n}","// vue的构造函数导出vue给别人使用, vue的实现方式：原型模式，所有的功能都通过原型扩展的方式来添加\r\n\r\nimport { initMixin } from \"./init\";\r\nimport { lifeCycleMixin } from \"./lifecycle\";\r\nimport { renderMixin } from \"./render\";\r\n\r\nfunction Vue(options) {\r\n  // 实现vue的初始化\r\n  this._init(options)\r\n}\r\n// 把Vue当作参数传进去\r\ninitMixin(Vue)\r\nrenderMixin(Vue)\r\nlifeCycleMixin(Vue)\r\nexport default Vue;\r\n\r\n/**\r\n * 1.\r\n */"],"names":["defaultTagRE","generate","ast","children","genChildren","code","tag","attrs","length","genProps","str","i","attr","name","styles","value","replace","arguments","push","JSON","stringify","join","map","item","gen","el","type","text","test","lastIndex","tokens","match","exec","index","slice","trim","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parserHTML","html","stack","root","createAstElement","parent","start","console","log","element","end","tagName","pop","chars","advance","len","substring","parseStartTag","arr","indexOf","startTagMatch","endTagMatch","compilerToFunction","template","render","Function","patch","vnode","elm","createElm","parentNode","insertBefore","nextSibling","removeChild","data","key","vm","document","createElement","updateProperties","forEach","child","appendChild","createTextNode","props","setAttribute","mountComponent","_update","_render","lifeCycleMixin","Vue","prototype","$el","isFunction","isObject","isArray","Array","oldArrayProperty","arrayMethods","Object","create","methods","method","args","call","inserted","ob","__ob__","observeArray","Observer","constructor","defineProperty","enumerable","__proto__","walk","observe","keys","defineReactive","obj","get","set","newValue","initState","options","$options","initData","proxy","source","_data","initMixin","_init","$mount","querySelector","outerHTML","undefined","createText","renderMixin","_c","_v","_s","val","toString"],"mappings":";;;;;;EAAA,MAAMA,YAAY,GAAG,0BAArB;EACA;;EACe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;EACpC;EACA,MAAIC,QAAQ,GAAGC,WAAW,CAACF,GAAD,CAA1B;EACA,MAAIG,IAAI,GAAI,OAAMH,GAAG,CAACI,GAAI,MACxBJ,GAAG,CAACK,KAAJ,CAAUC,MAAV,GAAmBC,QAAQ,CAACP,GAAG,CAACK,KAAL,CAA3B,GAAyC,WAC1C,KAAIJ,QAAQ,GAAI,GAAEA,QAAS,EAAf,GAAmB,EAAG,GAFnC;EAGA,SAAOE,IAAP;EACD;;EAED,SAASI,QAAT,CAAkBF,KAAlB,EAAyB;EACvB;EACA,MAAIG,GAAG,GAAG,EAAV;;EACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,KAAK,CAACC,MAAzB,EAAiCG,CAAC,EAAlC,EAAsC;EACpC,QAAIC,IAAI,GAAGL,KAAK,CAACI,CAAD,CAAhB,CADoC;;EAGpC,QAAGC,IAAI,CAACC,IAAL,KAAc,OAAjB,EAA0B;EACxB,UAAIC,MAAM,GAAG,EAAb;EACAF,MAAAA,IAAI,CAACG,KAAL,CAAWC,OAAX,CAAmB,oBAAnB,EAAyC,YAAW;EAClDF,QAAAA,MAAM,CAACG,SAAS,CAAC,CAAD,CAAV,CAAN,GAAuBA,SAAS,CAAC,CAAD,CAAhC;EACD,OAFD;EAGAL,MAAAA,IAAI,CAACG,KAAL,GAAaD,MAAb;EACD;;EACDJ,IAAAA,GAAG,CAACQ,IAAJ,CAAU,GAAEN,IAAI,CAACC,IAAK,IAAGM,IAAI,CAACC,SAAL,CAAeR,IAAI,CAACG,KAApB,CAA2B,EAApD;EACD;;EACD,SAAQ,IAAGL,GAAG,CAACW,IAAJ,EAAW,GAAtB,CAfuB;EAiBxB;;EACD,SAASjB,WAAT,CAAqBF,GAArB,EAA0B;EACxB,MAAIC,QAAQ,GAAGD,GAAG,CAACC,QAAnB;;EACA,MAAGA,QAAH,EAAa;EACX,WAAOA,QAAQ,CAACmB,GAAT,CAAaC,IAAI,IAAIC,GAAG,CAACD,IAAD,CAAxB,EAAgCF,IAAhC,CAAqC,GAArC,CAAP;EACD,GAJuB;;;EAMxB,SAAO,KAAP;EACD;;EACD,SAASG,GAAT,CAAaC,EAAb,EAAiB;EACf,MAAGA,EAAE,CAACC,IAAH,KAAY,CAAf,EAAkB;EAChB,WAAOzB,QAAQ,CAACwB,EAAD,CAAf;EACD,GAFD,MAEO;EACL,QAAIE,IAAI,GAAGF,EAAE,CAACE,IAAd,CADK;;EAGL,QAAG,CAAC3B,YAAY,CAAC4B,IAAb,CAAkBD,IAAlB,CAAJ,EAA6B,OAAQ,OAAMA,IAAK,IAAnB,CAHxB;EAKL;;EACA,QAAIE,SAAS,GAAG7B,YAAY,CAAC6B,SAAb,GAAyB,CAAzC;EACA,QAAIC,MAAM,GAAG,EAAb;EACA,QAAIC,KAAJ,CARK;EAUL;EACA;;EACA,WAAMA,KAAK,GAAG/B,YAAY,CAACgC,IAAb,CAAkBL,IAAlB,CAAd,EAAuC;EACrC;EACA,UAAIM,KAAK,GAAGF,KAAK,CAACE,KAAlB,CAFqC;;EAIrC,UAAIJ,SAAS,GAAGI,KAAhB,EAAuB;EACrBH,QAAAA,MAAM,CAACZ,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeO,IAAI,CAACO,KAAL,CAAWL,SAAX,EAAsBI,KAAtB,CAAf,CAAZ;EACD,OANoC;;;EAQrCH,MAAAA,MAAM,CAACZ,IAAP,CAAa,MAAKa,KAAK,CAAC,CAAD,CAAL,CAASI,IAAT,EAAgB,GAAlC,EARqC;EAUrC;;EACAN,MAAAA,SAAS,GAAGI,KAAK,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASvB,MAA7B,CAXqC;EAatC;;EACD,QAAIqB,SAAS,GAAGF,IAAI,CAACnB,MAArB,EAA6B;EAC3B;EACAsB,MAAAA,MAAM,CAACZ,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeO,IAAI,CAACO,KAAL,CAAWL,SAAX,CAAf,CAAZ;EACD,KA7BI;;;EA+BL,WAAQ,MAAKC,MAAM,CAACT,IAAP,CAAY,GAAZ,CAAiB,GAA9B;EACD;EACF;;ECxED,MAAMe,MAAM,GAAI,8BAAhB;;EACA,MAAMC,YAAY,GAAI,OAAMD,MAAO,QAAOA,MAAO,GAAjD;;EACA,MAAME,YAAY,GAAG,IAAIC,MAAJ,CAAY,KAAIF,YAAa,EAA7B,CAArB;;EACA,MAAMG,MAAM,GAAG,IAAID,MAAJ,CAAY,QAAOF,YAAa,QAAhC,CAAf;;EACA,MAAMI,SAAS,GAAG,2EAAlB;;EACA,MAAMC,aAAa,GAAG,YAAtB;EAGA;;EACA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;EACxB;EACA,MAAIC,KAAK,GAAG,EAAZ,CAFwB;;EAIxB,MAAIC,IAAI,GAAG,IAAX;;EAEA,WAASC,gBAAT,CAA0BzC,GAA1B,EAA+BC,KAA/B,EAAsCyC,MAAM,GAAG,IAA/C,EAAqD;EACnD,WAAO;EACL1C,MAAAA,GADK;EAELoB,MAAAA,IAAI,EAAE,CAFD;EAGLvB,MAAAA,QAAQ,EAAE,EAHL;EAIL6C,MAAAA,MAJK;EAKLzC,MAAAA;EALK,KAAP;EAOD,GAduB;;;EAgBxB,WAAS0C,KAAT,CAAe3C,GAAf,EAAoBC,KAApB,EAA2B;EACzB2C,IAAAA,OAAO,CAACC,GAAR,CAAY7C,GAAZ,EAAiBC,KAAjB,EADyB;;EAGzB,QAAIyC,MAAM,GAAGH,KAAK,CAACA,KAAK,CAACrC,MAAN,GAAe,CAAhB,CAAlB;EACA,QAAI4C,OAAO,GAAGL,gBAAgB,CAACzC,GAAD,EAAMC,KAAN,EAAayC,MAAb,CAA9B,CAJyB;;EAMzB,QAAGF,IAAI,KAAK,IAAZ,EAAkB;EAChBA,MAAAA,IAAI,GAAGM,OAAP;EACD;;EACD,QAAGJ,MAAH,EAAW;EACT;EACAI,MAAAA,OAAO,CAACJ,MAAR,GAAiBA,MAAjB,CAFS;;EAITA,MAAAA,MAAM,CAAC7C,QAAP,CAAgBe,IAAhB,CAAqBkC,OAArB;EACD;;EACDP,IAAAA,KAAK,CAAC3B,IAAN,CAAWkC,OAAX;EAED;;EACD,WAASC,GAAT,CAAaC,OAAb,EAAsB;EACpBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;EACA,QAAId,MAAM,GAAGK,KAAK,CAACU,GAAN,EAAb;;EACA,QAAGf,MAAM,CAAClC,GAAP,IAAcgD,OAAjB,EAA0B;EACxBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;EACD;EACF;;EACD,WAASxB,IAAT,CAAc6B,KAAd,EAAqB;EACnB,QAAIR,MAAM,GAAGH,KAAK,CAACA,KAAK,CAACrC,MAAN,GAAe,CAAhB,CAAlB,CADmB;;EAGnBgD,IAAAA,KAAK,GAAGA,KAAK,CAACxC,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAR;EACAkC,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;;EACA,QAAIA,KAAJ,EAAW;EACTR,MAAAA,MAAM,CAAC7C,QAAP,CAAgBe,IAAhB,CAAqB;EACnBQ,QAAAA,IAAI,EAAE,CADa;EAEnBC,QAAAA,IAAI,EAAE6B;EAFa,OAArB;EAID;EACF,GApDuB;;;EAsDxB,WAASC,OAAT,CAAiBC,GAAjB,EAAsB;EACpBd,IAAAA,IAAI,GAAGA,IAAI,CAACe,SAAL,CAAeD,GAAf,CAAP;EACD;;EAED,WAASE,aAAT,GAAyB;EACvB;EACA,UAAMX,KAAK,GAAGL,IAAI,CAACb,KAAL,CAAWO,YAAX,CAAd;;EACA,QAAGW,KAAH,EAAU;EACR,YAAMlB,KAAK,GAAG;EACZ;EACAuB,QAAAA,OAAO,EAAEL,KAAK,CAAC,CAAD,CAFF;EAGZ1C,QAAAA,KAAK,EAAE,EAHK;;EAAA,OAAd,CADQ;EAOR;;EACAkD,MAAAA,OAAO,CAACR,KAAK,CAAC,CAAD,CAAL,CAASzC,MAAV,CAAP;EACA,UAAI6C,GAAJ;EACA,UAAIQ,GAAJ,CAVQ;EAYR;;EACA,aAAM,EAAER,GAAG,GAAGT,IAAI,CAACb,KAAL,CAAWW,aAAX,CAAR,MAAuCmB,GAAG,GAAGjB,IAAI,CAACb,KAAL,CAAWU,SAAX,CAA7C,CAAN,EAA2E;EACzE;EACAV,QAAAA,KAAK,CAACxB,KAAN,CAAYW,IAAZ,CAAiB;EACfL,UAAAA,IAAI,EAAEgD,GAAG,CAAC,CAAD,CADM;EAEf9C,UAAAA,KAAK,EAAE8C,GAAG,CAAC,CAAD,CAAH,IAAUA,GAAG,CAAC,CAAD,CAAb,IAAoBA,GAAG,CAAC,CAAD;EAFf,SAAjB;EAIAJ,QAAAA,OAAO,CAACI,GAAG,CAAC,CAAD,CAAH,CAAOrD,MAAR,CAAP;EACD,OApBO;;;EAsBR,UAAG6C,GAAH,EAAQ;EACNI,QAAAA,OAAO,CAACJ,GAAG,CAAC,CAAD,CAAH,CAAO7C,MAAR,CAAP;EACD;;EACD,aAAOuB,KAAP,CAzBQ;EA2BT,KA3BD,MA2BO;EACL,aAAO,KAAP;EACD;EAEF;;EAED,SAAMa,IAAN,EAAY;EACV;EACA,QAAIX,KAAK,GAAGW,IAAI,CAACkB,OAAL,CAAa,GAAb,CAAZ,CAFU;;EAIV,QAAG7B,KAAK,KAAK,CAAb,EAAgB;EACd;EACA,YAAM8B,aAAa,GAAGH,aAAa,EAAnC;EACAV,MAAAA,OAAO,CAACC,GAAR,CAAYY,aAAZ,EAHc;;EAKd,UAAGA,aAAH,EAAkB;EAChBd,QAAAA,KAAK,CAACc,aAAa,CAACT,OAAf,EAAwBS,aAAa,CAACxD,KAAtC,CAAL;EACA;EACD;;EACD,UAAIyD,WAAJ,CATc;;EAWd,UAAGA,WAAW,GAAGpB,IAAI,CAACb,KAAL,CAAWS,MAAX,CAAjB,EAAqC;EACnCa,QAAAA,GAAG,CAACW,WAAW,CAAC,CAAD,CAAZ,CAAH;EACAP,QAAAA,OAAO,CAACO,WAAW,CAAC,CAAD,CAAX,CAAexD,MAAhB,CAAP;EACA;EACD;;EACD;EACD,KArBS;;;EAuBV,QAAGyB,KAAK,GAAG,CAAX,EAAc;EACZ;EACA,UAAIuB,KAAK,GAAGZ,IAAI,CAACe,SAAL,CAAe,CAAf,EAAkB1B,KAAlB,CAAZ;EACAN,MAAAA,IAAI,CAAC6B,KAAD,CAAJ;EACAC,MAAAA,OAAO,CAACD,KAAK,CAAChD,MAAP,CAAP;EACD;EAEF;;EACD,SAAOsC,IAAP;EACD;;ECrIM,SAASmB,kBAAT,CAA4BC,QAA5B,EAAsC;EAC3C;EACA,MAAIhE,GAAG,GAAGyC,UAAU,CAACuB,QAAD,CAApB,CAF2C;EAK3C;EACA;EACA;EACA;;EACA,MAAI7D,IAAI,GAAGJ,QAAQ,CAACC,GAAD,CAAnB,CAT2C;;EAW3C,MAAIiE,MAAM,GAAG,IAAIC,QAAJ,CAAc,sBAAqB/D,IAAK,GAAxC,CAAb;EACA,SAAO8D,MAAP;EACD;;EChBM,SAASE,KAAT,CAAe5C,EAAf,EAAmB6C,KAAnB,EAA0B;EAC/B;EACApB,EAAAA,OAAO,CAACC,GAAR,CAAY1B,EAAZ,EAAgB6C,KAAhB;EACA,QAAMC,GAAG,GAAGC,SAAS,CAACF,KAAD,CAArB;EACA,MAAItB,MAAM,GAAGvB,EAAE,CAACgD,UAAhB,CAJ+B;;EAM/BzB,EAAAA,MAAM,CAAC0B,YAAP,CAAoBH,GAApB,EAAyB9C,EAAE,CAACkD,WAA5B,EAN+B;;EAQ/B3B,EAAAA,MAAM,CAAC4B,WAAP,CAAmBnD,EAAnB;EACAyB,EAAAA,OAAO,CAACC,GAAR,CAAYoB,GAAZ;EACA,SAAOA,GAAP;EACD;;EAED,SAASC,SAAT,CAAmBF,KAAnB,EAA0B;EACxB,QAAM;EAAEhE,IAAAA,GAAF;EAAOuE,IAAAA,IAAP;EAAa1E,IAAAA,QAAb;EAAuB2E,IAAAA,GAAvB;EAA4BnD,IAAAA,IAA5B;EAAkCoD,IAAAA;EAAlC,MAAwCT,KAA9C,CADwB;EAGxB;;EACA,MAAI,OAAOhE,GAAP,KAAe,QAAnB,EAA6B;EAC3BgE,IAAAA,KAAK,CAAC7C,EAAN,GAAWuD,QAAQ,CAACC,aAAT,CAAuB3E,GAAvB,CAAX,CAD2B;;EAG3B4E,IAAAA,gBAAgB,CAACZ,KAAK,CAAC7C,EAAP,EAAWoD,IAAX,CAAhB;EACA1E,IAAAA,QAAQ,CAACgF,OAAT,CAAkBC,KAAD,IAAW;EAC1Bd,MAAAA,KAAK,CAAC7C,EAAN,CAAS4D,WAAT,CAAqBb,SAAS,CAACY,KAAD,CAA9B;EACD,KAFD;EAGD,GAPD,MAOO;EACLd,IAAAA,KAAK,CAAC7C,EAAN,GAAWuD,QAAQ,CAACM,cAAT,CAAwB3D,IAAxB,CAAX;EACD;;EACD,SAAO2C,KAAK,CAAC7C,EAAb;EACD;;EAED,SAASyD,gBAAT,CAA0BzD,EAA1B,EAA8B8D,KAAK,GAAG,EAAtC,EAA0C;EACxC,OAAI,IAAIT,GAAR,IAAeS,KAAf,EAAsB;EACpB9D,IAAAA,EAAE,CAAC+D,YAAH,CAAgBV,GAAhB,EAAqBS,KAAK,CAACT,GAAD,CAA1B;EACD;EACF;;EChCM,SAASW,cAAT,CAAwBV,EAAxB,EAA4B;EACjCA,EAAAA,EAAE,CAACW,OAAH,CAAWX,EAAE,CAACY,OAAH,EAAX;EACD;EAEM,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;EAClC;EACAA,EAAAA,GAAG,CAACC,SAAJ,CAAcJ,OAAd,GAAwB,UAASpB,KAAT,EAAgB;EACtCpB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAZ;EACA,UAAMS,EAAE,GAAI,IAAZ;EACAA,IAAAA,EAAE,CAACtD,EAAH,GAAQ4C,KAAK,CAACU,EAAE,CAACgB,GAAJ,EAASzB,KAAT,CAAb;EACD,GAJD;EAKD;;ECbM,SAAS0B,UAAT,CAAqBnB,IAArB,EAA2B;EAChC,SAAO,OAAOA,IAAP,IAAe,UAAtB;EACD;EACM,SAASoB,QAAT,CAAkBpB,IAAlB,EAAwB;EAC7B,SAAO,OAAOA,IAAP,IAAe,QAAf,IAA2BA,IAAI,KAAK,IAA3C;EACD;EACM,IAAIqB,OAAO,GAAGC,KAAK,CAACD,OAApB;;ECLP,IAAIE,gBAAgB,GAAGD,KAAK,CAACL,SAA7B;;EACO,IAAIO,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcH,gBAAd,CAAnB;EACP;EACA;EACA;EACA;EACA;;EACA,IAAII,OAAO,GAAG,CACZ,MADY,EAEZ,KAFY,EAGZ,OAHY,EAIZ,SAJY,EAKZ,QALY,EAMZ,MANY,EAOZ,SAPY,CAAd;EAUAA,OAAO,CAACrB,OAAR,CAAgBsB,MAAM,IAAI;EACxB;EACAJ,EAAAA,YAAY,CAACI,MAAD,CAAZ,GAAuB,UAAU,GAAGC,IAAb,EAAmB;EACxCxD,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EADwC;EAGxC;;EACAiD,IAAAA,gBAAgB,CAACK,MAAD,CAAhB,CAAyBE,IAAzB,CAA8B,IAA9B,EAAoC,GAAGD,IAAvC,EAJwC;EAMxC;EACA;;EACA,QAAIE,QAAQ,GAAG,EAAf;EACA,QAAIC,EAAE,GAAG,KAAKC,MAAd;;EACA,YAAOL,MAAP;EACE,WAAK,QAAL;EACEG,QAAAA,QAAQ,GAAGF,IAAI,CAACxE,KAAL,CAAW,CAAX,CAAX;EACA;;EACF,WAAK,MAAL;EACE0E,QAAAA,QAAQ,GAAGF,IAAX;EACA;;EACF,WAAK,SAAL;EACEE,QAAAA,QAAQ,GAAGF,IAAX;EACA;EATJ;;EAYA,QAAGE,QAAQ,CAACpG,MAAZ,EAAoBqG,EAAE,CAACE,YAAH,CAAgBH,QAAhB;EACrB,GAvBD;EAwBD,CA1BD;;EChBA,MAAMI,QAAN,CAAe;EACb;EACAC,EAAAA,WAAW,CAACpC,IAAD,EAAO;EAChB;EACA;EACA;EACA;EACAyB,IAAAA,MAAM,CAACY,cAAP,CAAsBrC,IAAtB,EAA4B,QAA5B,EAAsC;EACpC9D,MAAAA,KAAK,EAAC,IAD8B;EAEpCoG,MAAAA,UAAU,EAAC,KAFyB;;EAAA,KAAtC,EALgB;;EAUhB,QAAGjB,OAAO,CAACrB,IAAD,CAAV,EAAkB;EAAE;EAClB;EACAA,MAAAA,IAAI,CAACuC,SAAL,GAAiBf,YAAjB,CAFgB;;EAIhB,WAAKU,YAAL,CAAkBlC,IAAlB;EACD,KALD,MAKO;EACL,WAAKwC,IAAL,CAAUxC,IAAV,EADK;EAEN;EAEF;;EACDkC,EAAAA,YAAY,CAAElC,IAAF,EAAQ;EAAE;EACpBA,IAAAA,IAAI,CAACM,OAAL,CAAa5D,IAAI,IAAI+F,OAAO,CAAC/F,IAAD,CAA5B;EACD;;EACD8F,EAAAA,IAAI,CAACxC,IAAD,EAAO;EACTyB,IAAAA,MAAM,CAACiB,IAAP,CAAY1C,IAAZ,EAAkBM,OAAlB,CAA0BL,GAAG,IAAI;EAAE;EACjC0C,MAAAA,cAAc,CAAC3C,IAAD,EAAOC,GAAP,EAAYD,IAAI,CAACC,GAAD,CAAhB,CAAd;EACD,KAFD;EAGD;;EA7BY;EAgCf;EACA;EACA;EACA;EACA;;;EACA,SAAS0C,cAAT,CAAwBC,GAAxB,EAA6B3C,GAA7B,EAAkC/D,KAAlC,EAAyC;EAAE;EACzC;EACA;EACA;EACA;EACAuG,EAAAA,OAAO,CAACvG,KAAD,CAAP;EACAuF,EAAAA,MAAM,CAACY,cAAP,CAAsBO,GAAtB,EAA2B3C,GAA3B,EAAgC;EAC9B4C,IAAAA,GAAG,GAAG;EACJ,aAAO3G,KAAP,CADI;EAEL,KAH6B;;EAI9B4G,IAAAA,GAAG,CAACC,QAAD,EAAW;EACZ1E,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;EACA,UAAGyE,QAAQ,KAAK7G,KAAhB,EAAuB,OAFX;;EAIZuG,MAAAA,OAAO,CAACM,QAAD,CAAP;EACA7G,MAAAA,KAAK,GAAG6G,QAAR;EACD;;EAV6B,GAAhC;EAYD;;EACM,SAASN,OAAT,CAAiBzC,IAAjB,EAAuB;EAC5B;EACA;EACA;EACA,MAAG,CAACoB,QAAQ,CAACpB,IAAD,CAAZ,EAAoB;EAClB;EACD;;EAED,MAAGA,IAAI,CAACiC,MAAR,EAAgB;EACd;EACD,GAV2B;EAY5B;;;EACA,SAAO,IAAIE,QAAJ,CAAanC,IAAb,CAAP;EACD;;ECrEM,SAASgD,SAAT,CAAmB9C,EAAnB,EAAuB;EAC5B,QAAM+C,OAAO,GAAG/C,EAAE,CAACgD,QAAnB;;EACA,MAAGD,OAAO,CAACjD,IAAX,EAAiB;EAAE;EACjBmD,IAAAA,QAAQ,CAACjD,EAAD,CAAR;EACD;EACF;;EAED,SAASkD,KAAT,CAAelD,EAAf,EAAmBD,GAAnB,EAAwBoD,MAAxB,EAAgC;EAAE;EAChC5B,EAAAA,MAAM,CAACY,cAAP,CAAsBnC,EAAtB,EAA0BD,GAA1B,EAA+B;EAC7B4C,IAAAA,GAAG,GAAG;EACJ,aAAO3C,EAAE,CAACmD,MAAD,CAAF,CAAWpD,GAAX,CAAP;EACD,KAH4B;;EAI7B6C,IAAAA,GAAG,CAACC,QAAD,EAAW;EACZ7C,MAAAA,EAAE,CAACmD,MAAD,CAAF,CAAWpD,GAAX,IAAkB8C,QAAlB;EACD;;EAN4B,GAA/B;EAQD;;EAED,SAASI,QAAT,CAAkBjD,EAAlB,EAAsB;EACpB7B,EAAAA,OAAO,CAACC,GAAR,CAAY4B,EAAZ,EADoB;;EAGpB,MAAIF,IAAI,GAAGE,EAAE,CAACgD,QAAH,CAAYlD,IAAvB,CAHoB;;EAKpBA,EAAAA,IAAI,GAAGE,EAAE,CAACoD,KAAH,GAAWnC,UAAU,CAACnB,IAAD,CAAV,GAAmBA,IAAI,CAAC8B,IAAL,CAAU5B,EAAV,CAAnB,GAAmCF,IAArD;EACA;EACF;EACA;EACA;EACA;EACA;EACA;EACE;EACA;EACA;;EACAyC,EAAAA,OAAO,CAACzC,IAAD,CAAP,CAhBoB;;EAkBpB,OAAI,IAAIC,GAAR,IAAeD,IAAf,EAAqB;EAAE;EACrBoD,IAAAA,KAAK,CAAClD,EAAD,EAAKD,GAAL,EAAU,OAAV,CAAL;EACD,GApBmB;EAsBpB;EACA;;EACD;;ECzCM,SAASsD,SAAT,CAAmBvC,GAAnB,EAAwB;EAC7BA,EAAAA,GAAG,CAACC,SAAJ,CAAcuC,KAAd,GAAsB,UAAUP,OAAV,EAAmB;EACvC;EACA;EACA,UAAM/C,EAAE,GAAG,IAAX,CAHuC;;EAKvCA,IAAAA,EAAE,CAACgD,QAAH,GAAcD,OAAd,CALuC;;EAOvCD,IAAAA,SAAS,CAAC9C,EAAD,CAAT,CAPuC;;EASvC,QAAGA,EAAE,CAACgD,QAAH,CAAYtG,EAAf,EAAmB;EACjB;EACA;EACAyB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAHiB;EAKjB;EACA;;EACA4B,MAAAA,EAAE,CAACuD,MAAH,CAAUvD,EAAE,CAACgD,QAAH,CAAYtG,EAAtB;EACD;EACF,GAlBD;;EAmBAoE,EAAAA,GAAG,CAACC,SAAJ,CAAcwC,MAAd,GAAuB,UAAS7G,EAAT,EAAa;EAClC,UAAMsD,EAAE,GAAG,IAAX,CADkC;;EAGlCtD,IAAAA,EAAE,GAAGuD,QAAQ,CAACuD,aAAT,CAAuB9G,EAAvB,CAAL;EACAsD,IAAAA,EAAE,CAACgB,GAAH,GAAStE,EAAT,CAJkC;;EAMlC,QAAG,CAACsD,EAAE,CAACgD,QAAH,CAAY5D,MAAhB,EAAwB;EACtB,UAAID,QAAQ,GAAGa,EAAE,CAACgD,QAAH,CAAY7D,QAA3B;;EACA,UAAG,CAACA,QAAJ,EAAc;EACZ;EACAA,QAAAA,QAAQ,GAAGzC,EAAE,CAAC+G,SAAd;EACD;EACD,UAAIrE,MAAM,GAAGF,kBAAkB,CAACC,QAAD,CAA/B;EACAa,MAAAA,EAAE,CAACgD,QAAH,CAAY5D,MAAZ,GAAqBA,MAArB;EACD,KAdiC;;;EAgBlCsB,IAAAA,cAAc,CAACV,EAAD,CAAd,CAhBkC;EAkBnC,GAlBD;EAmBD;EAGD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EACA;EACA;EACA;EACA;EAGA;;EClEO,SAASE,aAAT,CAAuBF,EAAvB,EAA2BzE,GAA3B,EAAgCuE,IAAI,GAAG,EAAvC,EAA2C,GAAG1E,QAA9C,EAAwD;EAAE;EAC/D;EACA,SAAOmE,KAAK,CAACS,EAAD,EAAKzE,GAAL,EAAUuE,IAAV,EAAgB1E,QAAhB,EAA0B0E,IAAI,CAACC,GAA/B,EAAoC2D,SAApC,CAAZ;EACD;EAEM,SAASC,UAAT,CAAoB3D,EAApB,EAAwBpD,IAAxB,EAA8B;EAAE;EACrC,SAAO2C,KAAK,CAACS,EAAD,EAAK0D,SAAL,EAAgBA,SAAhB,EAA2BA,SAA3B,EAAsCA,SAAtC,EAAiD9G,IAAjD,CAAZ;EACD;EAED;;EACA,SAAS2C,KAAT,CAAeS,EAAf,EAAmBzE,GAAnB,EAAwBuE,IAAxB,EAA8B1E,QAA9B,EAAwC2E,GAAxC,EAA6CnD,IAA7C,EAAmD;EACjD,SAAO;EACLoD,IAAAA,EADK;EAELzE,IAAAA,GAFK;EAGLuE,IAAAA,IAHK;EAIL1E,IAAAA,QAJK;EAKL2E,IAAAA,GALK;EAMLnD,IAAAA;EANK,GAAP;EAQD;EAED;EACA;EACA;EACA;EACA;;ECtBO,SAASgH,WAAT,CAAqB9C,GAArB,EAA0B;EAC/BA,EAAAA,GAAG,CAACC,SAAJ,CAAc8C,EAAd,GAAmB,YAAW;EAAE;EAC9B1F,IAAAA,OAAO,CAACC,GAAR,CAAYlC,SAAZ;EACA,UAAM8D,EAAE,GAAG,IAAX;EACA,WAAOE,aAAa,CAACF,EAAD,EAAK,GAAG9D,SAAR,CAApB;EACD,GAJD;;EAKA4E,EAAAA,GAAG,CAACC,SAAJ,CAAc+C,EAAd,GAAmB,UAASlH,IAAT,EAAe;EAAE;EAClCuB,IAAAA,OAAO,CAACC,GAAR,CAAYlC,SAAZ;EACA,UAAM8D,EAAE,GAAG,IAAX;EACA,WAAO2D,UAAU,CAAC3D,EAAD,EAAKpD,IAAL,CAAjB;EACD,GAJD;;EAKAkE,EAAAA,GAAG,CAACC,SAAJ,CAAcgD,EAAd,GAAmB,UAASC,GAAT,EAAc;EAAE;EACjC;EACA,QAAI9C,QAAQ,CAAC8C,GAAD,CAAZ,EAAmB,OAAO5H,IAAI,CAACC,SAAL,CAAe2H,GAAf,CAAP;EACnB,WAAOA,GAAP;EACD,GAJD;;EAKAlD,EAAAA,GAAG,CAACC,SAAJ,CAAcH,OAAd,GAAwB,YAAW;EACjC,UAAMZ,EAAE,GAAG,IAAX;EACA,UAAM;EAAEZ,MAAAA;EAAF,QAAaY,EAAE,CAACgD,QAAtB;EACA7E,IAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAM,CAAC6E,QAAP,EAAZ;EACA,UAAM1E,KAAK,GAAGH,MAAM,CAACwC,IAAP,CAAY5B,EAAZ,CAAd;EACA7B,IAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAZ;EACA,WAAOA,KAAP;EACD,GAPD;EAQD;;EC3BD;;EAMA,SAASuB,GAAT,CAAaiC,OAAb,EAAsB;EACpB;EACA,OAAKO,KAAL,CAAWP,OAAX;EACD;;;EAEDM,SAAS,CAACvC,GAAD,CAAT;EACA8C,WAAW,CAAC9C,GAAD,CAAX;EACAD,cAAc,CAACC,GAAD,CAAd;EAGA;EACA;EACA;;;;;;;;"}